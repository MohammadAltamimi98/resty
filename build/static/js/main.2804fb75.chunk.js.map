{"version":3,"sources":["components/header/Header.jsx","components/results/Results.jsx","components/form/Form.jsx","components/footer/Footer.jsx","components/history/History.jsx","app.js","index.js"],"names":["Header","Results","props","data","headers","results","length","Form","useState","textArea","settextArea","method","setmethod","url","seturl","request","setrequest","handleSubmit","e","a","preventDefault","formData","handleApiCall","console","log","message","methodHandler","target","id","textAreaHandler","onSubmit","name","type","onChange","value","className","onClick","rows","cols","Footer","History","history","map","element","index","toUpperCase","App","setData","requestParams","setRequestParams","setHistory","showLoading","setLoading","res","count","useEffect","axios","fetchData","error","Fragment","loading","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.2804fb75.chunk.js","sourcesContent":["import './Header.scss';\n\nfunction Header() {\n  return (\n    <header>\n      <h1>RESTy</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import './Results.scss';\nimport JSONPretty from 'react-json-pretty';\n\nfunction Results(props) {\n  // console.log(props.data?.data);\n  // console.log('props.data.headers', props.data?.headers);\n\n  const fake = {\n    'content-type': 'application/json',\n  };\n\n  return (\n    <>\n      <section>\n        <h1>Headers: </h1>\n        <pre> {props.data && <JSONPretty data={props.data.headers ? props.data.headers : fake} />}</pre>\n\n\n        <pre>\n          {props.data?.data?.results && <>\n            <h1>Count:</h1>\n            <JSONPretty data={props.data.data.results.length} />\n          </>}\n        </pre>\n\n        <h1>Results:</h1>\n        <pre data-testid=\"results\"> {props.data?.data && <JSONPretty data={props.data.data.results ? props.data.data.results : props.data.data} />}</pre>\n\n      </section>\n\n    </>\n  );\n}\nexport default Results;\n\n","import './Form.scss';\nimport { useState } from 'react';\n\n\n\nfunction Form(props) {\n  // we define the states inside the function out of any if statement or other blocks\n  const [textArea, settextArea] = useState(false);\n  const [method, setmethod] = useState('get');\n  const [url, seturl] = useState('');\n  const [request, setrequest] = useState('');\n\n  //function to handle submit\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = {\n        method: method,\n        url: url,\n      };\n      await props.handleApiCall(formData, request);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  // function to handle url and update it\n  function urlHandler(e) {\n    seturl(e.target.value);\n  }\n\n  // function to handle method and update it\n  function methodHandler(e) {\n    setmethod(e.target.id);// we can use the id given for each option\n    settextArea(false);\n  }\n\n\n  // function to handle request and update it\n  function requestHandler(e) {\n    setrequest(e.target.value);\n  }\n\n\n  function textAreaHandler(e) {\n    settextArea(true); //here we set the textarea state to the negative of the initial state;\n    setmethod(e.target.id);\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label >\n          <span>URL: </span>\n          <input name='url' type='text' onChange={urlHandler} />\n\n          <button type=\"submit\" data-testid=\"my_btn\">GO!</button>\n        </label>\n        <label className=\"methods\">\n          <span id=\"get\" onClick={methodHandler}>GET</span>\n          <span id=\"post\" onClick={textAreaHandler}>POST</span>\n          <span id=\"put\" onClick={textAreaHandler}>PUT</span>\n          <span id=\"delete\" onClick={methodHandler}>DELETE</span>\n        </label>\n        {textArea && <textarea rows='15' cols='35' onChange={requestHandler} />}\n        {/* basically when the show text state is set to true which happens only at the put and post methods this text area will show \"conditional rendering\" */}\n      </form>\n    </>\n  );\n}\n\n\nexport default Form;\n","import './Footer.scss';\nfunction Footer() {\n  return <footer>&copy; 2018 powered by Mohammad Altamimi</footer>;\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction History(props) {\n  return (\n    <div>\n      <h3>History:</h3>\n      {props.history.map((element, index) => {\n        return (\n          <span key={index}>\n            {element.method.toUpperCase()} {'  ===>   '} {element.url} <br />\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default History;\n","import React from 'react';\nimport './app.scss';\nimport { useState, useEffect, useReducer } from 'react';\nimport Header from './components/header/Header';\nimport Results from './components/results/Results';\nimport Form from './components/form/Form';\nimport Footer from './components/footer/Footer';\nimport History from './components/history/History';\nimport { PacmanLoader } from 'react-spinners';\nimport axios from 'axios';\n\n\n\nfunction App(props) {\n  const [data, setData] = useState(null);\n  const [requestParams, setRequestParams] = useState({});\n  const [history, setHistory] = useState([]);\n  const [showLoading, setLoading] = useState(false);\n\n\n  useEffect(() => {\n    try {\n      async function fetchData() {\n        if (requestParams.url) {\n          console.log(requestParams.url);\n          const res = await axios({\n            method: requestParams.method,\n            url: requestParams.url,\n          });\n          setData(res);\n          setLoading(false);\n        }\n      }\n      fetchData();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, [requestParams]);\n\n\n  async function callApi(formData) {\n    setLoading(true);\n    if (formData.url !== \"\") {\n      setRequestParams(formData);\n      setHistory([...history, formData]);\n    }\n    else {\n      const res = {\n        count: 2,\n        method: formData.method,\n        results: [\n          { name: 'fake thing 1', url: 'http://fakethings.com/1' },\n          { name: 'fake thing 2', url: 'http://fakethings.com/2' },\n        ],\n      };\n      setLoading(false);\n      setData({ res });\n      setRequestParams(formData);\n      console.log(data);\n      setHistory([...history, formData]);\n    }\n  }\n\n  return (\n    <div>\n      <React.Fragment>\n        <Header />\n        <div>Request method :  {requestParams.method}</div>\n        <div>URL :  {requestParams.url}</div>\n        <Form handleApiCall={callApi} />\n        {history !== null && <History history={history} />}\n        {showLoading ? <PacmanLoader loading={showLoading} /> : <Results data={data} />}\n        <Footer />\n      </React.Fragment>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}